{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 ArnoPro-Caption;\f2\fswiss\fcharset0 Helvetica;
\f3\fnil\fcharset0 Monaco;\f4\fnil\fcharset0 Consolas;\f5\fnil\fcharset0 Consolas-Italic;
\f6\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red36\green36\blue36;\red181\green16\blue26;\red0\green139\blue208;
\red38\green38\blue38;\red232\green14\blue8;\red40\green108\blue185;\red26\green26\blue26;\red234\green234\blue234;
\red190\green190\blue190;\red0\green0\blue163;\red178\green178\blue178;\red248\green255\blue82;\red252\green143\blue135;
\red249\green205\blue143;\red248\green238\blue138;\red212\green233\blue150;\red167\green208\blue255;\red224\green190\blue234;
\red205\green205\blue205;}
\paperw12240\paperh15840\vieww12360\viewh13080\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs72 \cf3 Unix for Mac OS X Users
\f2\b0\fs24 \cf0 \
\
As the lessons are being completed make noted in DETAILS section. Then summarise in the SUMMARY section. Just commands should contain no, or 
\i very
\i0  little, explanations.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs36 \cf4 JUST COMMANDS
\f2\fs24 \cf0 \
\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo $SHELL
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
Command k
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1   
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Switches: -i -w -v -n -c\
\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -R apple .
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Read short_file.txt and concatenate new_file.txt to it\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat short_file.txt new_file.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Read lorem_ipsum.txt using less. It outputs one screenful of text at a time.\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
less lorem_ipsum.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
  While in less, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
f
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  or 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
spacebar
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to to forward one page, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
b
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to go back one page, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
g
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to start of document, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
G
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to end of document, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
q
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to exit.\
\
"Follow" a file:\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
tail -f short_file.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
  Then if any process changes the bottom of the file, e.g. a log file, it shows up immediately.\
\
Move or rename a file or directories. Syntax:\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
mv
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  
\i source
\i0  
\i destination
\i0 \
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
mv newfile.txt testdir/newfile.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
  Options: 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-n
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  no overwriting, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-f
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0   \cf6 default\cf0  force overwriting, 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-i
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  interactive overwriting "ask me", 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-v
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  verbose\
\
Copy\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cp
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  
\i source
\i0  
\i destination
\i0 \
\
Delete\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
rm
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  
\i source
\i0  
\i destination
\i0 \
\
Make a directory\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
mkdir
\f2\i\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  name
\i0 \
\
Delete an empty directory\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
rmdir
\f2\i\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  name
\i0 \
\
Delete a non-empty directory. \cf6 You remove files and directories recursively\cf0 .\
  
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
rm -R
\f2\i\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  name
\i0 \
\
\
\
\pard\pardeftab720\sl300\partightenfactor0

\f1\fs36 \cf4 SUMMARY
\f0\fs26 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs30 \cf7 \
\
\pard\pardeftab720\sl300\partightenfactor0

\f1\fs36 \cf4 DETAILS
\f0\fs26 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs44 \cf3 Chapter 1 Introduction to Unix
\f0\b0\fs26 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b\fs34 \cf0 What is Unix?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b0\fs26 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic.tiff \width11040 \height5380
}¬}
\f0\fs26 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 1.tiff \width11880 \height5380
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 2.tiff \width9800 \height2400
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b\fs34 \cf0 \
Logging in and using the command prompt
\f0\b0\fs26 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic 1__#$!@%!#__Pasted Graphic.tiff \width12200 \height7340
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
\
\pard\pardeftab720\sl500\partightenfactor0

\f2\b\fs34 \cf0 Command structure
\f0\b0\fs26 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
Unix commands have the following structure\
\

\i\fs30 command options arguments
\i0\fs26 \
\
where 
\i command
\i0  is always a 
\b single
\b0  word.\
\
Examples\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic 2__#$!@%!#__Pasted Graphic.tiff \width4520 \height3380
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
Sometimes an option needs an argument of its own. For example\
\
	banner -w 50 'Hello world!'\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
the 50 is an argument to the -w (width) option. So, it makes it clearer if we write\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf0 	banner -w50 'Hello world!'\
\
Note the space between -w and 50 has been eliminated.\
\
We can also have multiple arguments. E.g.\
\
	cat -n file1.txt file2.txt\
\
file1.txt and file2.txt are two arguments to the cat command.\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b\fs34 \cf0 Kernel and shells
\f0\b0\fs26 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs44 \cf3 Chapter 3 Working with Files and Directories
\f2\b0\fs34 \cf7 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b\fs34 \cf0 Hard Links
\f0\b0\fs26 \
  This created a hard link called myHardLink to a file called myFile.txt\
  
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
ln myFile.txt myHardLink
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	When you create a hard link, you create another file 
\i\b name
\i0\b0  that points to the same file.\
	Consequences:\
		- Open myHardLink and change it. Then myFile.txt will be changed. And vice versa.\
		- Delete one or the other of myFile.txt or myHardLink, and the file will not be deleted, although the name you deleted will be. So delete myFile.txt. The name will disappear, but the file is still on disk and can be accessed via myHardLink.\
		- If you move the name myHardLink to another directory, it will still work fine. Also, if you move the name myFile.txt to another directory, it will still work fine.\
\

\f2\b\fs34 Symbolic Links
\f0\b0\fs26 \
  Same syntax as hard links, but use the 
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
-s
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  option\
  
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
ln -s myFile.txt mySymLink
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	When you create a symbolic link called mySymLink to a file called myFile.txt, you create not just a file name, but also another 
\i\b file
\i0\b0 . The new file contains the address of myFile.txt.\
	Consequences:\
		- If the original file is moved or deleted, the link breaks.\
\

\f2\b\fs34 Finder aliases
\f0\b0\fs26 \
  Are a third breed of animal. They are a sophisticated symlink invented by apple that tries to keep track when the target file is moved.\
\
\
\pard\pardeftab720\sl500\partightenfactor0

\f2\b\fs34 \cf0 Searching for files and directories
\f0\b0\fs26 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
  Syntax: 
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
find
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  
\i path
\i0  
\i expression
\i0 \
\
  Find in 
\f4\fs28 \cf2 ~/Documents
\f0\fs26 \cf0  any file that has name 
\f4\fs28 \cf2 someimage.jpg
\f0\fs26 \cf0 \
  
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
Find ~/Documents -name "someimage.jpg"
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
 \
  Note: 
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
-name "someimage.jpg"
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  is the expression\'97the hyphen in front of 'name' gives the impression it is an option, but it is not.\
\
  Wildcard characters: * (zero or more characters), ? (any one character), [a-c] (a or b or c)\
\
  find in current directory all files whose name is  *.plist and whose full path does not contain *QuickTime* (
\i anythig
\i0\b QuickTime
\i\b0 anything
\i0 )\
  
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
find . -name *.plist -and -not -path *QuickTime*
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
 \
 We can use 
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
-and
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 , 
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
-or
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 , 
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
-not
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 , it the usual sense. Can be used repeatedly. For example\
\
  
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
find . -name *.plist -and -not -path *QuickTime* -and -not -path *Preferences*
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
  will also drop any files whose full paths contains Preferences.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 Find all files of type file with size less than 41k case-insensitive name *.pdf\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
find . -type f -size -41k -iname '*.pdf'
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 Find all files of type file with size less than 41k case-insensitive name *.pdf\
and move them to the directory ./small\
Notes:\
	\{\} is substituted with file names to read, for example mv file1 ./small\
	\\; is necessary to terminate the many lines that this command gets translate to\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
find . -type f -size -41k -iname '*.pdf' -exec mv \{\} ./small \\;
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs44 \cf3 Chapter 6 Redirecting Input and Output\

\f2\b0\fs34 \cf7 \
\pard\pardeftab720\sl500\partightenfactor0

\b \cf0 Piping output to input
\f0\b0\fs26 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 	
\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
\CocoaLigature1 echo "Hello World" | wc
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
	
\f0\fs26 \CocoaLigature1 produces
\f3\fs20 \CocoaLigature0 \
       
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
\CocoaLigature1 1       2      12
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	(1 line, 2 words, 12 chars)\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs44 \cf3 Chapter 7 Configuring Your Work Environment\

\f2\b0\fs34 \cf7 \
\pard\pardeftab720\sl500\partightenfactor0

\b \cf0 Profile, login, and resource files
\f0\b0\fs26 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 When bash starts, it reads, in order:\
	
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
/etc/profile
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bash_profile, ~/.bash_login, ~/.profile, ~/.login
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
/etc/profile
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  is for all users and should not be edited. This file is always read.\
	Then, the file names on the second line above are checked. As soon as one of these is found to exist it will be read and the search terminated. That means the remaining files on the list will be ignored.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf0 \
	The 
\f2\fs24 file names on the second line above
\f0\fs26  are for the current user and can be modified.\
	Kevin Scoglund recommends that we put all our configs in 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bash_profile
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	In order to get our customisation take effect for both cases when we\
		- open a new terminal window and\
		- open a sub-shell by typing 'bash'\
	Kevin Scoglund recomends we put all our configs in 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  (for bash resource) and in 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bash_profile
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  tell bash to read and execute 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	KL followed this, 24.04.2016, to add colour to grep matches. See "Steps" below.\
	How?\
		Add the following to 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bash_profile
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 :\
\
		
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
if [-f ~/.bashrc]; then
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
			
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
source ~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
		
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
fi
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
		Then put all shell config in 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	Note: the conditional simply says if 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
-f
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  (file exists) 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  then read it as your source for config.\
\
	
\b "Steps"\
		
\f3\b0 \cf1 \cb5 \expnd0\expndtw0\kerning0
cd "/Users/kamranlayegh"
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
		
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
touch .bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
		
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
nano .bash_profile
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
		Then typed in:\
\
		
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
if [-f ~/.bashrc]; then
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
			
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
source ~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
		
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
fi
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
		Then Control X, y, return.\
\
		Then in 
\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
~/.bashrc
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0  added:\
		
\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
export GREP_OPTIONS="--color=auto"
\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\pard\pardeftab720\sl500\partightenfactor0

\f2\b\fs34 \cf0 Cleanup
\f0\b0\fs26 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 	~/.bash_logout is read and executed when you close a terminal window.\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b\fs44 \cf3 Chapter 8 Unix Power Tools\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0\fs26 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\b\fs34 \cf0 Find a text inside a given file
\f0\b0\fs26 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
                                              23.04.2016\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \
Quickly clear screen and lose output history\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
Command k
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Quick look inside a text file?\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\

\f2\fs24 \CocoaLigature1 "Grep for apple inside fruit.txt" meaning: Search for and print... (
\b G
\b0 lobal 
\b r
\b0 egular 
\b e
\b0 xpression 
\b p
\b0 rint)\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Case insensitive -i:\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -i apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Match only whole words -w, i.e. do not match pineapple\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -w apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Inversion option -v, i.e. match the lines that do not have apple in them. Will match many lines.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -v apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Line number option -n, gives line numbers in front of the matching lines\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -n apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
The count option -c, returns just a count integer\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -c apple fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Find 'apple' in any file whose filename ends with fruit.txt\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep apple *fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Find 'apple' in any file whose filename ends with fruit.txt, but show me only the filenems\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -l apple *fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
\
\
		
\f0\fs26 \cf10 8.1 grep- Searching for matching expressions
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 Find a text inside any of the files in a given directory\
Pipe other output into grep
\b0\fs24 \
	The -R (Recursive) option is necessary.\
\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -R apple .
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	The 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-h
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option hides the path and the file name\
	The 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-l
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option shows only the file paths (not the lines of text containing the matches).\
	The 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-L
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option shows the file paths for which there is no match.\
\
	grep for apple inside any files in the current directory that ends in fruit.txt\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep apple *fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	We can pipe the result of a cat into grep\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat fruit.txt | grep apple
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	The above is a little pointless. However, we can pipe anything, for example a list of all running processes into grep:\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
ps aux | grep Terminal
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	We can pipe the history (of the commands in this session) to grep:\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
history | grep ls
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
		
\f0\fs26 \cf10 8.2 grep- Multiple files, other input
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 Add colour to output for easy recognition of matches
\b0\fs24 \
	If we just do a 
\f3\fs20 \CocoaLigature0 grep lorem lorem_ipsum.txt
\f2\fs24 \CocoaLigature1 , we get a lot of output with the word lorem buried in there which makes it hard to find the occurrences of the word. Adding the --color option makes the word lorem appear coloured\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep --color lorem lorem_ipsum.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
To get matches in grep show up coloured automatically,\
put these lines in 
\f4\fs28 \cf2 .bashrc
\f2\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs28 \cf2 \
export GREP_COLOR="34;47"\
export GREP_OPTIONS="--color=auto"\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 Then make bash use 
\f4\fs28 \cf2 .bashrc
\f2\fs24 \cf0  by putting these lines in 
\f4\fs28 \cf2 .bash_profile
\f2\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f4\fs28 \cf2 \
if [ -f ~/.bashrc ]; then\
  source ~/.bashrc\
fi\
\
\
OTHER COLOURS\
\
foreground colors     background colors     attributes\
30      black         40        black       0   normal display\
31      red           41        red         1   bold\
32      green         42        green       4   underline (mono only)\
33      yellow        43        yellow      5   blink on\
34      blue          44        blue        7   reverse video on\
35      magenta       45        magenta     8   nondisplayed (invisible)\
36      cyan          46        cyan\
37      white         47        white\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \
		
\f0\fs26 \cf10 8.3 grep- Coloring matched text
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 Using regular expressions
\b0\fs24 \
	It is a good habit to put single quotes around regular expressions.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 	
\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
\CocoaLigature1 grep '.a.a.a' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf11 \cb12 banana\cf0 \cb1 \
\cf11 \cb12 papaya
\f2\fs24 \cf0 \cb1 \CocoaLigature1 	\
	as . matches exactly one character.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 	
\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
\CocoaLigature1 grep 'a..le' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf11 \cb12 apple\cf0 \cb1 \
pine\cf11 \cb12 apple\cf0 \cb1 \
\cf11 \cb12 apple\cf0 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep 'ea[cp]' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
p\cf11 \cb12 eac\cf0 \cb1 h\
pin\cf11 \cb12 eap\cf0 \cb1 ple\

\f2\fs24 \CocoaLigature1 		
\f0\fs26 \cf10 8.4 Introduction to regular expressions
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 Basic Syntax
\b0\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0    {{\NeXTGraphic 1__#$!@%!#__Pasted Graphic 2.tiff \width12280 \height7260
}¬}\
    \

\b Regular Expression Character classes
\b0 \
\
     {{\NeXTGraphic Pasted Graphic 3.tiff \width10980 \height6280
}¬}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 		
\f0\fs26 \cf10 8.5 Regular expressions- Basic syntax
\f2\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs34 \cf0 Using Character Classes
\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b0 \cf0 Notice that the above character classes by themselves will be interpreted as character sets. The following will match : u p e r
\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\b0 \cf0 	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'Aa:BbDcEeUu' | grep '[:upper:]'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 Aa\cf11 \cb12 :\cf0 \cb1 BbDcE\cf11 \cb12 e\cf0 \cb1 U\cf11 \cb12 u\cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
To get the desired effect, enclose in another set of square brackets\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'AaBbDcEeUu' | grep '[[:upper:]]'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf11 \cb12 A\cf0 \cb1 a\cf11 \cb12 B\cf0 \cb1 b\cf11 \cb12 D\cf0 \cb1 c\cf11 \cb12 E\cf0 \cb1 e\cf11 \cb12 U\cf0 \cb1 u
\f2\fs24 \CocoaLigature1 \
\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep [[:alpha:]] fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\cf11 \cb12 pear\cf0 \cb1 \
\cf11 \cb12 raspberry\cf0 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 ...\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b \cf0 Note:
\b0 \
1.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep 'ap+le' fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
[No matches], but\
\
2.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep -E 'ap+le' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf11 \cb12 apple\cf0 \cb1 \
pine\cf11 \cb12 apple\cf0 \cb1 \
\cf11 \cb12 apple
\f2\fs24 \cf0 \cb1 \CocoaLigature1 \
\
3.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
grep 'ap\\+le' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\cf11 \cb12 apple\cf0 \cb1 \
pine\cf11 \cb12 apple\cf0 \cb1 \
\cf11 \cb12 apple\cf0 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
Why?\
In 1, the + is interpreted literally.\
In 2, by adding -E option, we turn on the 
\i extended
\i0  regex. See the Basic Syntax table above.\
In 3, we escape the + so it is not interpreted as a literal + sign, but as meaning "1 or more repeats of the previous character".\
\
		
\f0\fs26 \cf10 8.6 Using regular expressions with grep
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 tr
\b0\fs24 \
	Can search and replace for single characters. For example, search for ',' and replace them with '-'\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'a,b,c' | tr ',' '-'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
a-b-c
\f2\fs24 \CocoaLigature1 \
\
	Replace every 1 with A and every 2 with a B\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo '1121' | tr '12' 'AB'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
AABA
\f2\fs24 \CocoaLigature1 \
\
	We can also use character sets\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo '221213'|tr '1-3' 'a-c'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
bbabac
\f2\fs24 \CocoaLigature1 \
\
For more, including -s (to suppress a sequence of repeated character to one occurrence), -d (to delete), -c (to get the complement of, i.e. not\'97 e.g. tr -cd '[:alnum:]' to dlelete all non-alpha-numeric characters) see\
	https://en.wikipedia.org/wiki/Tr_(Unix)\
\
	We can use character classes\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
tr '[:upper:]' '[:lower:]' < people.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
kevin\
lynda\
bob\
...\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 Note that all upper case characters have been turned into lower case.\
\
	The following will read a set of comma-separated-values from us_presidents.csv, then replace all the commas with tabs, then output the result to a new file called us_presidents.tsv\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
tr ',' '\\t' < us_presidents.csv > us_presidents.tsv
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
		
\f0\fs26 \cf10 8.7 tr- Translating characters
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 Deleting and 'squeezing with tr
\b0\fs24 \
	-c (complement) is the negation operator and is used in combination with -d option. See examples in the next table.\
\
	{{\NeXTGraphic Pasted Graphic 4.tiff \width7540 \height3340
}¬}\
\
	{{\NeXTGraphic Pasted Graphic 5.tiff \width9560 \height4180
}¬}\
	  {{\NeXTGraphic Pasted Graphic 6.tiff \width7260 \height3120
}¬}\
	\
		
\f0\fs26 \cf10 8.8 tr- Deleting and squeezing characters
\f2\fs24 \cf0 \
\
\

\b\fs34 sed the Stream Editor
\b0\fs24 \
	sed is more powerful than tr.\
\
	The syntax for search and replacement is\
\
	
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
sed 's/
\f5\i search_string
\f4\i0 /
\f5\i replacement_string
\f4\i0 /'
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'upstream' | sed 's/up/down/'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
downstream\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
	By default, sed replaces only the first match\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'upstream and upward' | sed 's/up/down/'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
downstream and upward
\f2\fs24 \CocoaLigature1 \
\
	To replace all the occurrences, add a g (global) to the end of the expression passed to sed\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'upstream and upward' | sed 's/up/down/g'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
downstream and downward
\f2\fs24 \CocoaLigature1 \
\
	The delimiters (forward slash in the above examples) can be replaced with other characters. sed looks at the first character that comes after the first s (for substitute) and uses it as the delimiter.\
\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'upstream' | sed 's:up:down:'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
downstream
\f2\fs24 \CocoaLigature1 \
\
	To read from a file as input stream, simply pass the file as a second parameter after the expression\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed 's/pear/golabi/' fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	works the same as\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed 's/pear/golabi/' < fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\

\f2\fs24 \CocoaLigature1 	To output to a file, you must pipe\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed 's/pear/golabi/' fruit.txt > golabi.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	Note: Each line is treated as a stream. This means that the 
\i first occurrence
\i0  of 'pear' in 
\i each
\i0  line is replace. If there are other occurrences in a line, they will not be replaced unless if the g modifier is included at the end of the expression, as in\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed 's/pear/golabi/g' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \

\f2\fs24 \CocoaLigature1 \
	To search for more than one string, prefix the expressions with -e\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'Duirng daytime we have sunlight' | sed -e 's/day/night/' -e 's/sun/moon/'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Duirng nighttime we have moonlight
\f2\fs24 \CocoaLigature1 \
\
		
\f0\fs26 \cf10 8.9 sed- Stream editor
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 sed and Regular Expressions
\b0\fs24 \
	Use regular expressions with sed\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 'Who needs vowels?' | sed 's/[aeiou]/./g'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Wh. n..ds v.w.ls?
\f2\fs24 \CocoaLigature1 \
\
	
\b Examples:
\b0 \
\
	Indent every line two spaces\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed 's/^/  /g' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
  pear\
  raspberry\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 ...\
Note the indentation in above output.\
\
	sed does not understand \\t as 'tab character' (grep does). So we have to use the following sequence:\
	ctrl v <tab>\
	Note that this shows only as a whitespace in the copy-paste\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed 's/^/       /' fruit.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
	pear\
	raspberry
\f2\fs24 \CocoaLigature1 \
	...\
Note the indentation by a tab in above output.\
\
	You can use the ctrl v sequence with some other characters as well such as \
	
\f6\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
\uc0\u8963 
\f4  v 
\f6 \uc0\u9099 
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	and \
	
\f6\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
\uc0\u8963 
\f4  v 
\f6 \uc0\u8617 
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	Remove html tags and their contents from homepage.htm\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
sed -E 's/<[^<>]+>//g' homepage.html
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	Note: As each line is treated as a new stream, if the opening < and closing > are on two different lines the above will not work. So, for example\
	 
\f3\fs20 \CocoaLigature0 <div id="content">
\f2\fs24 \CocoaLigature1  \
was correctly removed, but \
	
\f3\fs20 \CocoaLigature0 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
\f2\fs24 \CocoaLigature1 \
was not.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 Back references
\b0\fs24 \
	Put a regex in round brackets, then refer to it as \\1. Up to 9 back references are allowed.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo daytime | sed -E 's/(...)/\\1 or night/'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
day or nighttime
\f2\fs24 \CocoaLigature1 \
\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo "Kamran Layegh" | sed -E 's/([[:alpha:]]+) ([[:alpha:]]+)/\\2, \\1/'
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Layegh, Kamran
\f2\fs24 \CocoaLigature1 \
\
		
\f0\fs26 \cf10 8.10 sed- Regular expressions and back-references
\f2\fs24 \cf0 \
\
\

\b\fs34 cut
\b0\fs24 \
	Can cut characters, bytes, or fields. Here we will look at characters and fields.\
\
	
\b Cutting characters
\b0 \
	\
	cut -c (characters) from column 1 to 3 (1-based count)\
	Note: you get the same result if you miss out the 1. Also 3- would return from character 3 to end.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cut -c 1-3 fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 pea\
ras\
ban
\f2\fs24 \CocoaLigature1 \
\
	To cut more than one portion of the text, create a comma-separated list\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cut -c 1-3,5-6 fruit.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	Take command history, pipe it into grep 'fruit' which picks out the lines that contain 'fruit', then pipe it into cut to select characters 8 to end\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
history | grep 'fruit' | cut -c 8-
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	
\b Cutting fields
\b0 \
	\
	By default cut uses the tab character as field separator. Hence\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cut -f 2,6 us_presidents.tsv
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	Will show fields (-f) i.e. columns 2 and 6. Use 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
2-6
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to select fields 2 to 6.\
	You can of course pipe the result to a file by adding 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
 > someFile.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to the end of the above command to write the result to disk.\
\
	If the delimiter is any character other than the tab character, you specify it by using the -d option after the list value. The following uses the comma as the delimiter of fields\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cut -f 2,6 -d ',' us_presidents.csv
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
	
\b Some other options
\b0 \
\
	The 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-s
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option does nothing, i.e. returns unchanged, the lines that have no delimiter in them.\
\
		
\f0\fs26 \cf10 8.11 cut- Cutting select text portions
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 diff
\b0\fs24 \
	Compare the contents of two files and points out the differences on a line-by-line basis.\
	The left-right terminology is useful. Put the old (original) file on the left and the new (modified) file on the right.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
diff original_file.txt revised_file.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
2d1\
< line 2:  delete delete delete delete delete delete\
6c5\
< line 6:  change change change change change change\
---\
> line 6:  change        change        change       \
11a11\
> line 12: append append append append append append\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
	diff uses these abbreviations: 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
d
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  for deleted; 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
c
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  for changed; 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
a
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  for appended.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b \cf0 deleted
\b0 \
	So, in the above output, 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
2d1
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  means 
\i "Look at line 2 of the left file and line 1 of the right file and see a deletion"
\i0 \
	Next line \
	
\f3\fs20 \CocoaLigature0 < line 2:  delete delete delete delete delete delete
\f2\fs24 \CocoaLigature1 \
	the 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
<
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  means 
\i "in the left file"
\i0 \
	So altogether, it says 
\i "in the left file"
\i0 \
	
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
line 2:  delete delete delete delete delete delete
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	
\i "was deleted"
\i0 \
\

\b changed
\b0 \
	Next, we have \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 6c5\
< line 6:  change change change change change change\
---\
> line 6:  change        change        change       \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 	The 
\f3\fs20 \CocoaLigature0 6c5
\f2\fs24 \CocoaLigature1  says 
\i "Look at line 6 of the left file and line 5 of the right file and see a change"
\i0 \
	The three dashes separate the line 6 of the left file as it is now and line 6 of the right file.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b \cf0 appended
\b0 \
\
	A similar pattern is used on the last two lines\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 11a11\
> line 12: append append append append append append
\f2\fs24 \CocoaLigature1 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b \cf0 diff options
\b0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 7.tiff \width8320 \height3980
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
		
\f0\fs26 \cf10 8.12 diff- Comparing files
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 diff Controlling its output
\b0\fs24 \
	\
	{{\NeXTGraphic Pasted Graphic 8.tiff \width9840 \height3900
}¬}\
	The 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-c
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option makes diff to output all the contents of both files with 3 coded markings: - for deleted; + for appended; ! for changed. The - can only appear in the left file. The + can only appear in the right file. The ! must appear in pairs in both files.\
\
	The 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-y
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option does the same thing, but puts the output side by side, rather than one above the other.	\
	The 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-u
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option merges the two files and shows which lines will be deleted and which will be appended. A change is of course a deletion plus an insertion, so a change will appear as a - and a + on the same line number:\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
diff -u original_file.txt revised_file.txt
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3\fs20 \cf0 \CocoaLigature0 ...\
-line 6:  change change change change change change\
+line 6:  change        change        change       \
...\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
	The 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-q
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option simply tells us if the files differ or not.\
	If the files are identical, the 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-q
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option will fail silently. To force it to confirm that the files are identical use the 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-qs
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option.\
\
	We can pipe the output to TextMate\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
diff -u original_file.txt revised_file.txt | mate
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	{{\NeXTGraphic Pasted Graphic 9.tiff \width11980 \height9320
}¬}\
	For a count of changes, pipe to 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
diffstat
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 , noting that 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-u
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option must be used for 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
diffstat
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  to work\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
diff -u original_file.txt revised_file.txt | diffstat
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
 revised_file.txt |    4 ++--\
 1 file changed, 2 insertions(+), 2 deletions(-)
\f2\fs24 \CocoaLigature1 \
	Note that in
\f3\fs20 \CocoaLigature0  4 ++--
\f2\fs24 \CocoaLigature1  the 4 means four changes, the 
\f3\fs20 \CocoaLigature0 ++
\f2\fs24 \CocoaLigature1  means 2 insertions and the 
\f3\fs20 \CocoaLigature0 --
\f2\fs24 \CocoaLigature1  means two deletions. This is because a change is a deletion plus an insertion\
\
		
\f0\fs26 \cf10 8.13 diff- Alternative formats
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 xargs
\b0\fs24 \
	xargs executes arguments.\
	
\b I
\b0 t parses an input stream into items. Then it loops through each item and passes them to a command. The command to which the items are passed is called the utility command. The exact manner in which the items are passed can be controlled by the 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-n
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option. 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-n1
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  will cause the the items to be passed 1-at-a-time. 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-n2
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  will cause the items to be passed 2-at-a-time, and so on. See examples below for illustration.\
\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo lorem_ipsum.txt | xargs -t  wc
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
wc lorem_ipsum.txt\
     523    5289   36232 lorem_ipsum.txt
\f2\fs24 \CocoaLigature1 	\
	The -t option makes xargs to print out what it is doing \'97 
\f3\fs20 \CocoaLigature0 wc lorem_ipsum.txt 
\f2\fs24 \CocoaLigature1 \'97 useful for debugging the command you are building.\
\
	As an example of looping (we pass the -t for illustration only)\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo lorem_ipsum.txt us_presidents.csv | xargs -t wc
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
wc lorem_ipsum.txt us_presidents.csv\
     523    5289   36232 lorem_ipsum.txt\
      45     121    4309 us_presidents.csv\
     568    5410   40541 total
\f2\fs24 \CocoaLigature1 \
\
	To see how the -n option works, see the following three examples. In the second one with -n2, for example, xargs is outputting 2 items at a time.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 1 2 3 4 | xargs -n1
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
1\
2\
3\
4\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 \
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 1 2 3 4 | xargs -n2
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
1 2\
3 4\

\f2\fs24 \CocoaLigature1 \
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
echo 1 2 3 4 | xargs -n3
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
1 2 3\
4\

\f2\fs24 \CocoaLigature1 \
	The 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-L
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option\
	He is not very clear what this option does. See man pages for info. Roughly, it looks like:\
	the
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
 -n2
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option, for example, builds a command by outputting 2 items at a time, tokenised by 
\i space
\i0 , whereas 
\f4\fs26 \cf8 \cb9 \expnd0\expndtw0\kerning0
-L2
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option does the same but tokenised by 
\i line break
\i0 , i.e. 2 lines at a time rather than 2 words at a time. \
	\
	The -I option allows you to use a place holder, in the following example \{\}\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat fruit.txt | xargs -I \{\} echo "buy more \{\}"
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
buy more pear\
buy more raspberry\

\f2\fs24 \CocoaLigature1 ...\
\
	
\b Problem with filenames that contain spaces
\b0 \
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
ls ~/library | grep "^A.*"
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf11 \cb12 Accounts\cf0 \cb1 \
\cf11 \cb12 Acrobat User Data\cf0 \cb1 \
\cf11 \cb12 Address Book Plug-Ins\cf0 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 ...	\
	Note the spaces. Now suppose we want to do something which each of these filenames using xargs.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
ls ~/library | grep "^A.*" | xargs -n1
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Accounts\
Acrobat\
User\
Data\
Address
\f2\fs24 \CocoaLigature1 \
	Note that "Acrobat User Data" has broken up and become useless for processing.\
	Solution: Use the 
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
-0
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  option\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
ls ~/library | grep "^A.*" | xargs -0 -n1
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Accounts\
Acrobat User Data\

\f2\fs24 \CocoaLigature1 ...\
\
		
\f0\fs26 \cf10 8.14 xargs- Passing argument lists to commands
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 xargs some examples
\b0\fs24 \
	
\f0\fs26 \cf2 1. 
\f2\fs24 \cf0 Suppose we have a list of filenames in file_manifest.txt.\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat file_manifest.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
people.txt\
sorted_fruit.txt\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\fs24 \cf0 \CocoaLigature1 ...\
\
	We may want to do various things with their contents, but for the sake of this example let us say we want to concatenate them\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat file_manifest.txt | xargs cat
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Kevin\
Lynda\

\f2\fs24 \CocoaLigature1 ...\
\
	Pipe to less to be able to navigate the result more easily\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat file_manifest.txt | xargs cat | less
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	\
	2. Suppose we have a list of people's names,\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat people.txt
\fs20 \cf0 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
Kevin\
Lynda
\f2\fs24 \CocoaLigature1 \
...\
	and we would like to create a directory for each name\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
cat people.txt | uniq | xargs -I \{\} mkdir -p ./Students/\{\}
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	We are filtering through uniq in case some names are repeated.\
	{{\NeXTGraphic Pasted Graphic 10.tiff \width4900 \height3020
}¬}\
\
	3. Change permissions on all the files inside a given directory\
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
find test1/ -type f -print0 | xargs -0 chmod 755
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	Says: find in test1 folder all files of type f (file) and print 0 (tag spaces with nul? This will be consumed by the -0 option to  xargs to overcome the problem with spaces in filenames). Pipe all of this into xargs and the utility command is chmod 755.\
\
	4. Make a copy of al the files with name "new*.txt" \
	
\f3\fs26 \cf1 \cb5 \expnd0\expndtw0\kerning0
find . -name "new*.txt" -print0 | xargs -0 -I \{\} cp \{\} ./backup/\{\}.backup
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
	Says: Find all files wit name 
\f3\fs20 \CocoaLigature0 "new*.txt"
\f2\fs24 \CocoaLigature1  and 
\f3\fs20 \CocoaLigature0 print0
\f2\fs24 \CocoaLigature1  them i.e. print appending null at the end of each filename, then pipe to xargs using the null terminator (-0) letting me define a placeholder (-I) which I do using \{\}. xargs should use cp (copy) as utility command. We pass to the utility command 
\f3\fs20 \CocoaLigature0 \{\} ./backup/\{\}.backup
\f2\fs24 \CocoaLigature1  as argument.\
\
		
\f0\fs26 \cf10 8.15 xargs- Usage examples
\f2\fs24 \cf0 \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\b\fs34 \cf0 T
\b0\fs24 \
	c\
\
		
\f0\fs26 \cf10 m
\f2\fs24 \cf0 \
\
\

\b\fs34 T
\b0\fs24 \
	c\
\
		
\f0\fs26 \cf10 m
\f2\fs24 \cf0 \
\
\

\b\fs34 T
\b0\fs24 \
	c\
\
		
\f0\fs26 \cf10 m
\f2\fs24 \cf0 \
\
\

\b\fs34 T
\b0\fs24 \
	c\
\
		
\f0\fs26 \cf10 m
\f2\fs24 \cf0 \
\
\

\b\fs34 T
\b0\fs24 \
	c\
\
		
\f0\fs26 \cf10 m
\f2\fs24 \cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \
\'95 Bullet point\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3 \cf1 \cb5 \expnd0\expndtw0\kerning0
git config --global user.name "\cf13 IMPORTANT CODE\cf1 "
\f2\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f4 \cf8 \cb9 \expnd0\expndtw0\kerning0
code e.g xcode-select --install
\fs28 \cf2 \cb1 \kerning1\expnd0\expndtw0 \
\
file name
\f0\fs26 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf10 Unobtrusively fade into the background\cf2 \
\
\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf0        \cb14      \cb1    \cb15      \cb1    \cb16      \cb1    \cb17      \cb1    \cb18      \cb1    \cb19      \cb1    \cb20      \cb1  \
\
\
\
}